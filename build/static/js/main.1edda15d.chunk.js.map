{"version":3,"sources":["components/text.txt","components/text2.txt","components/text3.txt","components/TextReader.js","components/Generated.js","components/Bio.js","App.js","index.js"],"names":["module","exports","TextFileReader","props","readTextFile","file","rawFile","XMLHttpRequest","open","onreadystatechange","readyState","status","allText","responseText","setState","text","send","state","alert","this","txt","mb","mt","sx","maxWidth","padding","split","map","item","key","variant","m","onClick","Tweet","React","Component","myTxt","require","myTxt1","myTxt3","Generated","helloThere","bind","theme","flexDirection","Bio","isActive","handleShow","handleHide","border","borderColor","borderRadius","background","colors","blue","height","table","pt","width","marginX","tr","th","colSpan","marginY","defaultValue","as","pb","onSubmit","e","preventDefault","htmlFor","name","App","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"yJAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,yKC4E5BC,E,kDAtDd,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IAWPC,aAAe,SAAAC,GACd,IAAIC,EAAU,IAAIC,eAClBD,EAAQE,KAAK,MAAOH,GAAM,GAC1BC,EAAQG,mBAAqB,WAC5B,GAA2B,IAAvBH,EAAQI,aACY,MAAnBJ,EAAQK,QAAoC,GAAlBL,EAAQK,QAAa,CAClD,IAAIC,EAAUN,EAAQO,aACtB,EAAKC,SAAS,CACbC,KAAMH,MAKVN,EAAQU,KAAK,OAtBb,EAAKC,MAAQ,CACZF,KAAM,IAJW,E,oDAFlBG,MAAM,oC,yDAWNC,KAAKf,aAAae,KAAKhB,MAAMiB,O,+BAoB7B,OACC,6BACC,kBAAC,IAAD,CACAC,GAAI,EACJC,GAAI,GACJC,GAAI,CACHC,SAAU,IACVC,QAAS,SAGV,kBAAC,IAAD,KACCN,KAAKF,MAAMF,KAAKW,MAAM,MAAMC,KAAI,SAACC,EAAMC,GACvC,OAAO,0BAAMA,IAAKA,GAAMD,EAAK,mCAI/B,kBAAC,IAAD,CAAOE,QAAQ,UAAUC,EAAG,IAA5B,WAGC,kBAAC,IAAD,CAAQC,QAASb,KAAKc,MAAOH,QAAQ,QAArC,c,GArDyBI,IAAMC,WCK7BC,EAAQC,EAAQ,IAChBC,EAASD,EAAQ,IACjBE,EAASF,EAAQ,IAEFG,E,kDACnB,WAAYrC,GAAQ,IAAD,8BACjB,cAAMA,IACDsC,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKT,MAAQ,EAAKA,MAAMS,KAAX,gBAHI,E,yDAOjBxB,MAAM,+C,8BAGJA,MAAM,kC,+BAGR,OACE,YAAC,IAAD,CAAeyB,MAAOA,KACpB,YAAC,IAAD,CAAMZ,EAAG,GAAIR,GAAI,CAAEqB,cAAe,WAChC,YAAC,EAAD,CACExB,IAAKgB,IAEP,YAAC,EAAD,CACEhB,IAAKkB,IAEP,YAAC,EAAD,CACElB,IAAKmB,U,GAxBsBJ,aCLlBU,E,kDAiBnB,WAAY1C,GAAQ,IAAD,8BACjB,cAAMA,IAhBNc,MAAQ,CACJ6B,UAAS,GAcI,EAZjBC,WAAa,WACT,EAAKjC,SAAS,CACVgC,UAAU,KAUD,EANjBE,WAAa,WACT,EAAKlC,SAAS,CACVgC,UAAU,KAMlB,EAAKL,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKT,MAAQ,EAAKA,MAAMS,KAAX,gBAHI,E,yDAOjBxB,MAAM,+C,8BAGJA,MAAM,kC,+BAGR,OACE,YAAC,IAAD,CAAeyB,MAAOA,KACpB,YAAC,IAAD,CAAMZ,EAAG,GAAIR,GAAI,CAAEqB,cAAe,WAChC,mBACErB,GAAI,CACF0B,OAAQ,OACRC,YAAa,WACbC,aAAc,WACdC,WAAY,SAAAT,GAAK,OAAIA,EAAMU,OAAOC,MAClCC,OAAQ,MAGZ,YAAC,IAAEC,MAAH,CAASjC,GAAI,CAAEkC,GAAI,GAAIC,MAAO,IAAKC,QAAS,KAC1C,yBACE,YAAC,IAAEC,GAAH,KACE,YAAC,IAAEC,GAAH,CAAMC,QAAQ,MAAd,+BAIN,YAAC,IAAEN,MAAH,CAASjC,GAAI,CAAEkC,GAAI,GAAIC,MAAO,IAAKC,QAAS,GAAII,QAAS,KACvD,yBACE,YAAC,IAAEH,GAAH,KACE,YAAC,IAAEC,GAAH,CAAMC,QAAQ,MAAd,mDAIN,YAAC,IAAD,MACA,oCACA,qEACA,YAAC,IAAD,CAAQE,aAAc,KACtB,qCACA,yEACA,YAAC,IAAD,CAAQA,aAAc,KACtB,wCACA,6DACA,YAAC,IAAD,CAAQA,aAAc,KAEtB,YAAC,IAAD,MACA,YAAC,IAAD,CACEC,GAAG,OACHC,GAAI,EACJC,SAAU,SAAAC,GAAC,OAAIA,EAAEC,kBACjB9C,GAAI,CAAEmC,MAAO,MAEb,YAAC,IAAD,CAAOY,QAAQ,YAAf,wDACA,YAAC,IAAD,CAAOC,KAAK,WAAWlD,GAAI,IAC3B,YAAC,IAAD,CAAQW,QAASb,KAAK4B,YAAtB,aAED5B,KAAKF,MAAM6B,UAAY,uBACpB,+CAGA,YAAC,EAAD,a,GAlFmBX,aCPlBqC,E,uKARX,OACE,6BACE,kBAAC,EAAD,W,GAJUrC,aCCZsC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFL,K","file":"static/js/main.1edda15d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/text.0d7fefe8.txt\";","module.exports = __webpack_public_path__ + \"static/media/text2.7473a0cf.txt\";","module.exports = __webpack_public_path__ + \"static/media/text3.1887429b.txt\";","import React, { Component } from 'react';\nimport {\n\tjsx,\n\tThemeProvider,\n\tFlex,\n\tBox,\n\tButton,\n\tCard,\n\tText,\n\tLabel,\n\tInput,\n\tAlert,\n\tSlider,\n\tDivider,\n\tStyled as S\n  } from \"theme-ui\";\n\nclass TextFileReader extends React.Component {\n\n\tTweet(){\n\t\talert('Post this text to your tweet')\n\t}\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\ttext: \"\"\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.readTextFile(this.props.txt);\n\t}\n\n\treadTextFile = file => {\n\t\tvar rawFile = new XMLHttpRequest();\n\t\trawFile.open(\"GET\", file, false);\n\t\trawFile.onreadystatechange = () => {\n\t\t\tif (rawFile.readyState === 4) {\n\t\t\t\tif (rawFile.status === 200 || rawFile.status == 0) {\n\t\t\t\t\tvar allText = rawFile.responseText;\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\ttext: allText\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\trawFile.send(null);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Card\n\t\t\t\tmb={5}\n\t\t\t\tmt={20}\n\t\t\t\tsx={{\n\t\t\t\t\tmaxWidth: 800,\n\t\t\t\t\tpadding: \"30px\"\n\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t<Text>\n\t\t\t\t{this.state.text.split(\"\\n\").map((item, key) => {\n\t\t\t\t\treturn <span key={key}>{item}<br /></span>;\n\t\t\t\t})}\n\t\t\t</Text>\n\t\t\t</Card>\n\t\t\t<Alert variant=\"success\" m={10}>\n\t\t\t\tSuccess\n\t\t\t</Alert>\n\t\t\t\t<Button onClick={this.Tweet} variant=\"info\">Tweet</Button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default TextFileReader;","/** @jsx jsx */\nimport \"../styles.css\";\nimport theme from \"theme-ui-sketchy-preset\";\nimport {\n  jsx,\n  ThemeProvider,\n  Flex,\n  Box,\n  Button,\n  Card,\n  Text,\n  Label,\n  Input,\n  Alert,\n  Slider,\n  Divider,\n  Styled as S\n} from \"theme-ui\";\nimport { Component } from \"react\";\n // Relative path to your File\nimport TextFileReader from \"./TextReader\";\n\nconst myTxt = require(\"./text.txt\")\nconst myTxt1 = require(\"./text2.txt\")\nconst myTxt3 = require(\"./text3.txt\")\n\nexport default class Generated extends Component {\n  constructor(props) {\n    super(props);\n    this.helloThere = this.helloThere.bind(this);\n    this.Tweet = this.Tweet.bind(this);\n  }\n\n  helloThere() {\n    alert('Please wait while text is being generated');\n  }\n  Tweet() {\n      alert('Post this text to your tweet')\n  }\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <Flex m={30} sx={{ flexDirection: \"column\" }}>\n          <TextFileReader\n            txt={myTxt}\n          />\n          <TextFileReader\n            txt={myTxt1}\n          />\n          <TextFileReader\n            txt={myTxt3}\n          />\n        </Flex>\n      </ThemeProvider>\n    );\n  }\n}\n","/** @jsx jsx */\nimport \"../styles.css\";\nimport theme from \"theme-ui-sketchy-preset\";\nimport {\n  jsx,\n  ThemeProvider,\n  Flex,\n  Box,\n  Button,\n  Card,\n  Text,\n  Label,\n  Input,\n  Alert,\n  Slider,\n  Divider,\n  Styled as S\n} from \"theme-ui\";\nimport { Component } from \"react\";\nimport Generated from './Generated'\n\nexport default class Bio extends Component {\n\n    state = {\n        isActive:false\n    }\n    handleShow = () =>{\n        this.setState({\n            isActive: true\n        })\n    }\n\n    handleHide = () => {\n        this.setState({\n            isActive: false\n        })\n    }\n\n  constructor(props) {\n    super(props);\n    this.helloThere = this.helloThere.bind(this);\n    this.Tweet = this.Tweet.bind(this);\n  }\n\n  helloThere() {\n    alert('Please wait while text is being generated');\n  }\n  Tweet() {\n      alert('Post this text to your tweet')\n  }\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <Flex m={30} sx={{ flexDirection: \"column\" }}>\n          <div\n            sx={{\n              border: \"thin\",\n              borderColor: \"blueDark\",\n              borderRadius: \"sketchy0\",\n              background: theme => theme.colors.blue,\n              height: 50\n            }}\n          />\n          <S.table sx={{ pt: 20, width: 200, marginX: 18 }}>\n            <thead>\n              <S.tr>\n                <S.th colSpan=\"12\">writer's block destroyer</S.th>\n              </S.tr>\n            </thead>\n          </S.table>\n          <S.table sx={{ pt: 20, width: 200, marginX: 25, marginY: 20 }}>\n            <thead>\n              <S.tr>\n                <S.th colSpan=\"12\"> powered by a generative adversarial network</S.th>\n              </S.tr>\n            </thead>\n          </S.table>\n          <Divider />\n          <h5>Max length</h5>\n          <h6>This determines how many characters of text</h6>\n          <Slider defaultValue={25} />\n          <h5>Temperature</h5>\n          <h6> This will set the creativity of the generation</h6>\n          <Slider defaultValue={50} />\n          <h5>Number of text</h5>\n          <h6>This will control number of prompts</h6>\n          <Slider defaultValue={15} />\n\n          <Divider />\n          <Box\n            as=\"form\"\n            pb={3}\n            onSubmit={e => e.preventDefault()}\n            sx={{ width: 200 }}\n          >\n            <Label htmlFor=\"username\">Start off by writing a prompt, then hitting generate</Label>\n            <Input name=\"username\" mb={3} />\n            <Button onClick={this.handleShow}>Generate</Button>\n          </Box>\n          {this.state.isActive && <div>\n              <h4>\n                  Here are your prompts\n              </h4>\n              <Generated />\n              </div>}\n        </Flex>\n      </ThemeProvider>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Bio from './components/Bio'\nimport Generated from './components/Generated';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Bio />\n      </div>\n    );\n  }\n}\n\nexport default App\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}